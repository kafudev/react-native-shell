# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# 配置信息
# {
#   "key_id": "223576V89G",
#   "issuer_id": "6bcbdcb8-7dba-46e2-810a-f3475add5cf6",
#   "key": "",
#   "duration": 1200,
#   "in_house": false
# }
api_key_path = "./fastlane/key.json";

# 获取当前的时间
today = Time.new;
now_time = today.strftime("%Y%m%d%H%M%S");
# 通过时间戳截取获取版本code
ttime = Time.now.to_i.to_s
build_number = ttime[2,7]
# 版本号
version_name = "1.1.0"

# 当前APP信息
app_name = get_info_plist_value(path: "./rnshell/Info.plist", key: "CFBundleDisplayName")
identifier = get_info_plist_value(path: "./rnshell/Info.plist", key: "CFBundleIdentifier")
puts "APP_NAME: #{app_name}"
puts "applicationId: #{identifier}"
puts "versionCode: #{build_number}"
puts "versionName: #{version_name}"
puts "timestamp: #{ttime}"
puts "nowtime: #{now_time}"

# 原构建号信息
o_build_number =  get_build_number(xcodeproj: "rnshell.xcodeproj")


platform :ios do
  desc "To a new beta Release build"
  lane :release do
    build_type = "Release"
    increment_build_number(build_number: "#{build_number}", xcodeproj: "rnshell.xcodeproj")
    get_provisioning_profile(api_key_path: api_key_path)
    # sync_code_signing(type: "development", api_key_path: api_key_path)
    build_app(
      configuration: build_type,
      clean: true,
      include_symbols: true,
      include_bitcode: false,
      output_directory: "./build/#{build_type.downcase}/#{version_name}/", # Destination directory. Defaults to current directory.
      output_name: "rnshell_#{build_type.downcase}_#{version_name}_#{now_time}.ipa",
      export_method: "development", # app-store, package, ad-hoc, enterprise, development
      workspace: "rnshell.xcworkspace",
      scheme: "rnshell")
    # 还原构建号
    increment_build_number(build_number: "#{o_build_number}", xcodeproj: "rnshell.xcodeproj")
    # fir上传
    file_path =  lane_context[SharedValues::IPA_OUTPUT_PATH]
    answer = fir_cli api_token: "644fa3d8f235883fc8a62a6e66a2edbf", specify_file_path: "#{file_path}", need_release_id: true, changelog: ""
    # 获取更新下载二维码图片链接
    puts "fir上传后的结果： #{answer} "
    pgyer(api_key: "469f2987b4bb1eb2d826df2c31624ffc", user_key: "3e98a606c3614770b06b044af8ec8c1d")
  end

  desc "To a new dev Debug build"
  lane :debug do
    build_type = "Debug"
    obuild_number =
    increment_build_number(build_number: "#{build_number}", xcodeproj: "rnshell.xcodeproj")
    get_provisioning_profile(api_key_path: api_key_path)
    # sync_code_signing(type: "development", api_key_path: api_key_path)
    # 设置开发信息
    update_info_plist(
      plist_path: "./rnshell/Info.plist",
      display_name: "#{app_name}dev",
      app_identifier: "#{identifier}dev"
    )

    build_app(
      configuration: build_type,
      clean: true,
      skip_build_archive: false,
      skip_archive: false,
      include_symbols: false,
      include_bitcode: false,
      output_directory: "./build/#{build_type.downcase}/#{version_name}/", # Destination directory. Defaults to current directory.
      output_name: "rnshell_#{build_type.downcase}_#{version_name}_#{now_time}.ipa",
      export_method: "development", # app-store, package, ad-hoc, enterprise, development
      workspace: "rnshell.xcworkspace",
      scheme: "rnshell")
    # 还原构建号
    increment_build_number(build_number: "#{o_build_number}", xcodeproj: "rnshell.xcodeproj")
    # 设置开发信息
    update_info_plist(
      plist_path: "./rnshell/Info.plist",
      display_name: "#{app_name}",
      app_identifier: "#{identifier}"
    )
    # fir上传
    file_path =  lane_context[SharedValues::IPA_OUTPUT_PATH]
    answer = fir_cli api_token: "644fa3d8f235883fc8a62a6e66a2edbf", specify_file_path: "#{file_path}", need_release_id: true, changelog: ""
    # 获取更新下载二维码图片链接
    puts "fir上传后的结果： #{answer} "
    pgyer(api_key: "469f2987b4bb1eb2d826df2c31624ffc", user_key: "3e98a606c3614770b06b044af8ec8c1d")
  end

  desc "Push a new beta build to TestFlight"
  lane :testflight do
    increment_build_number(xcodeproj: "rnshell.xcodeproj")
    build_app(workspace: "rnshell.xcworkspace", scheme: "rnshell")
    upload_to_testflight
  end

end
